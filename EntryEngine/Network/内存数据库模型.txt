数据库基本需求
1. 创建数据库
2. 创建数据表及表结构
3. 增删该查操作
4. 备份，导入，导出

游戏数据库结构
1. 内存及持久化文件(csv, xml, json, 序列化)
	游戏实际使用的数据来源
2. 实际数据库备份(mysql, sql)
	游戏工具查询用的数据文件，也达到备份的作用
	因为备份可能有延迟，负载不高的情况下，可以直接使用内存数据库

运行流程
加载持久化文件到内存 -> 运行 -> 定时持久化 -> 定时备份 -> 关闭时持久化并备份

期望达到目标
1. linq快速进行增删改查操作，通过TCP/IP协议传输
2. 持久化文件和备份数据库文件能互相转换，最终使用持久化文件
（数据库修改数据方便，若持久化文件使用xml等方便修改的格式，也考虑可以不转换）


实现技术
1. 查询异步，增删改队列同步
2. 持久化及备份接口

内存数据库为一个服务端程序，开启一个TCP的Proxy作为服务，通过与客户
端（游戏服务端、GM工具等）定义接口协议进行交互。内存服务器通过Linq
实现客户端实际需求的操作，内置创建数据库，导入，导出，保存等操作。